// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Web.Core.AppService.Models;

namespace Web.Core.API.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20180305145349_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Web.Core.AppService.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Avatar");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Currency");

                    b.Property<string>("Email");

                    b.Property<bool>("Gender");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.CommonCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ComCode");

                    b.Property<string>("ComGroupCode");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("Value");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("CommonCode");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Address");

                    b.Property<string>("Avatar");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Currency");

                    b.Property<string>("Email");

                    b.Property<string>("Fullname");

                    b.Property<bool>("Gender");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreateDate");

                    b.Property<long>("CustomerId");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("Deposit");

                    b.Property<string>("Note");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<long>("ShippingFee");

                    b.Property<string>("ShippingTypeId");

                    b.Property<string>("Surcharge");

                    b.Property<long>("TotalPrice");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.Package", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<string>("ImgName");

                    b.Property<string>("Name");

                    b.Property<long>("Price");

                    b.Property<long>("ThemeId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<long>("Prd_Typ_Id");

                    b.Property<long>("Price");

                    b.Property<string>("Unit");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.ProductType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("Web.Core.AppService.Models.Theme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("ImgName");

                    b.Property<string>("Name");

                    b.Property<long>("OrderNo");

                    b.Property<long>("StyleId");

                    b.Property<long>("TypeId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<bool>("delFlag");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });
#pragma warning restore 612, 618
        }
    }
}
